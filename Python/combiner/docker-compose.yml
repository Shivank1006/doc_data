version: '3.8'

services:
  lambda-combiner:
    build:
      context: . # Assumes Dockerfile is in the same directory (combiner/)
      dockerfile: Dockerfile
    container_name: lambda_combiner_service
    ports:
      - "9002:8080" # Expose RIE on host port 9002 (to avoid conflict with page_processor if running)
    environment:
      # AWS Credentials & Configuration (load from a .env file or set directly)
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      FINAL_OUTPUT_PREFIX: ${FINAL_OUTPUT_PREFIX:-final-outputs} # Default if not set
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN:-}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      
    # Optional: Resource constraints
    mem_limit: 512m
    cpus: "0.5"

    # Optional: Lambda's ephemeral storage simulation
    tmpfs:
      - /tmp:size=100M

# --- How to Use ---
# 1. Ensure you have a requirements.txt in the 'combiner' directory (e.g., with 'boto3').
# 2. Create a .env file in the 'combiner' directory (or workspace root if preferred, adjust paths if needed) 
#    with your actual values for S3_BUCKET_NAME, AWS_ACCESS_KEY_ID, etc.
#    Example .env content:
#    S3_BUCKET_NAME=your-s3-bucket
#    FINAL_OUTPUT_PREFIX=my-final-outputs
#    AWS_ACCESS_KEY_ID=YOUR_AWS_KEY
#    AWS_SECRET_ACCESS_KEY=YOUR_AWS_SECRET
#    AWS_REGION=us-east-1
#
# 3. Build and run from the 'combiner' directory:
#    docker-compose up --build
#
# 4. The Lambda function will be listening on http://localhost:9002
#    You can invoke it using a curl command. Example (modify payload as needed):
#    curl -XPOST "http://localhost:9002/2015-03-31/functions/function/invocations" -d \
#    '{"run_uuid": "test-run-123", "s3_page_result_uris": ["s3://your-bucket/intermediate-page-results/uuid/doc_page_1_result.json"], "original_s3_uri": "s3://your-bucket/inputs/doc.pdf", "original_base_filename": "doc", "output_format": "markdown"}'
#
# 5. To stop the service:
#    Ctrl+C in the terminal, then:
#    docker-compose down 